[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "local-llm-pipeline"
version = "0.1.0"
description = "Simple pipeline for running LLMs locally"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Local LLM Pipeline", email = "pipeline@localhost"},
]
keywords = ["llm", "ai", "local", "inference", "pipeline"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "llama-cpp-python>=0.2.0",
    "click>=8.1.0",
    "pyyaml>=6.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
llm-pipeline = "pipeline.cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true